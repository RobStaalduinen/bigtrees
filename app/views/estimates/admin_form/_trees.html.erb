<script>
  var treeNumber = 1;

  function submitTree(addAnother){
    toggleLoading();

    let stumpRemoval = document.querySelector('input[name="stump_removal"]:checked').value;

    if(stumpRemoval == 'true'){
      askAccess();
    }

    let params = {
      estimate_id: estimateId,
      tree:{
        work_type_string: document.querySelector('select[name="work_type"]').value,
        stump_removal: stumpRemoval
      }
    }

    var xmlhttp = new XMLHttpRequest();
    xmlhttp.open("POST", `/trees`);
    xmlhttp.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    xmlhttp.send(JSON.stringify(params));

    xmlhttp.onload = function(){ 
      let response = JSON.parse(xmlhttp.response);

      submitCosts(function() {
        submitImages(response.tree_id, function(){ 
          advanceTree(addAnother)
        })
      })
    }
  }

  function submitImages(treeId, callback){
    var treeImages = document.querySelectorAll('input[name^="tree_images"]');
    var sendImage = false;
    const formData = new FormData();

    for(i=0; i<treeImages.length; i++){
      var file = treeImages[i].files[0];
      if(file != null){
        sendImage = true;
        formData.append('images[]', file, file.name);
      }
    }

    if(sendImage){
      var imageHttp = new XMLHttpRequest();

      imageHttp.open("POST", `/tree_images?tree_id=${treeId}`);
      imageHttp.send(formData);

      imageHttp.onload = function(){ 
        callback();
      }
    }
    else{
      callback();
    }
  }

  function submitCosts(callback){
    let descriptions = document.querySelectorAll('input[name="costs[][description]"]');
    let amounts = document.querySelectorAll('input[name="costs[][amount]"]');
    let costs = [];

    for(i=0; i < descriptions.length; i++){
      costs.push(
        {
          description: descriptions[i].value,
          amount: amounts[i].value
        }
      )
    }

    let params = {
      costs: costs
    }

    var xmlhttp = new XMLHttpRequest();
    xmlhttp.open("POST", `/estimates/${estimateId}/costs`);
    xmlhttp.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    xmlhttp.send(JSON.stringify(params));

    xmlhttp.onload = function() {
      callback();
    }
    
  }

  function setTreePageTitle(){
    var header = document.getElementById("tree-header");
    header.innerHTML = `Tree #${treeNumber}`
  }

  function advanceTree(addAnother){
    if(addAnother){
      treeNumber += 1;

      $("#tree-container").fadeOut(600, function(){
        document.getElementById("tree-form").reset();
        toggleLoading();
        setTreePageTitle();
        resetCostList();
        $("#tree-container").fadeIn(600);
      });
      }
    else{
      nextForm();
    }
  }

  var loading = false;

  function toggleLoading(){
    let submit = document.getElementById("tree-submit-button");
    let loadingIcon = document.getElementById("loading");

    if(!loading){
      loading = true;
      submit.style.display = "none";
      loadingIcon.style.display = "block";
    }
    else{
      loading = false;
      submit.style.display = "flex";
      loadingIcon.style.display = "none";
    }
  }

  function setDefaultCosts() {
    let workType = document.querySelector('select[name="work_type"]').value;
    let stump = document.querySelector('input[name="stump_removal"]:checked').value;

    let initialCosts = [];

    if(workType == "Tree Removal"){
      initialCosts.push({description: "Tree Removal", amount: null})
      if(stump == 'true'){
        initialCosts.push({description: "Stump Removal", amount: null})
      }
    }
    else if(workType == "Stump Removal") {
      initialCosts.push({description: "Stump Removal", amount: null})
    }
    else {
      initialCosts.push({description: "", amount: null})
    }

    setCostList(initialCosts)
  }

  function settingsForWorkType() {
    let workType = document.querySelector('select[name="work_type"]').value;
    let stumpField = document.getElementById("stump-field");
    
    if(workType == 'Tree Removal'){
      stumpField.style.display = "flex";
    }
    else{
      stumpField.style.display = "none";
    }

    setDefaultCosts();
  }

</script>

<%= form_tag('/', method: 'post', id: 'tree-form') do %>
  <div>
    <div class=form__header id="tree-header">
      Tree #1
    </div>

    <div class='form__row-vertical'>
      <b>What type of work is needed?</b>
      <%= select_tag 'work_type',
        options_for_select(['Tree Removal', 'Stump Removal', 'Other']),
        id: 'tree-work-select',
        class: "form-field",
        onchange: "settingsForWorkType()",
        include_blank: 'Select the work type...'
      %>
    </div>

    <div class='form__row-vertical' id="stump-field" style="display: none;">
      <b>Stump Removal?</b>
      <div id='estimate-form__radio-question'>
        <%= 
          render 'form_components/radio_field',
          label: 'No',
          name: 'stump_removal',
          value: false,
          checked: true,
          onChange: "setDefaultCosts()"
        %>

        <%= 
          render 'form_components/radio_field',
          label: 'Yes',
          name: 'stump_removal',
          value: true,
          checked: false,
          onChange: "setDefaultCosts()"
        %>
      </div>
    </div>

    <div class='form__row-vertical form__contact-row'>
      <b>Images</b>
      <%= 
        render 'form_components/image_uploader',
        name: 'tree_images[0]',
        number: 1
      %>
    </div>

    <div class='form__row-vertical'>
      <b>Costs</b>
      <%= render 'costs/partials/cost_list',
        initial_costs: [{description: '', amount: nil}] 
      %>
    </div>

    <div class='form__row-center' style='margin-top: 32px;'>
      <div id="tree-submit-button" class="form__submit" onClick="submitTree(true);">
        Add Another Task
      </div>
      <%= image_tag "/loading_spinner.gif", id: 'loading', style: 'display: none; width: 50px; height: 50px;' %>
    </div>
    
    <div class='form__row-center' style='margin-top: 16px;'>
      <div id="tree-submit-button" class="form__submit" onClick="submitTree(false);">
        Next
      </div>
      <%= image_tag "/loading_spinner.gif", id: 'loading', style: 'display: none; width: 50px; height: 50px;' %>
    </div>

  </div>

<% end %>
